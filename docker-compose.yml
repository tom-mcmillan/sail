version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: sail-postgres
    environment:
      POSTGRES_DB: sail
      POSTGRES_USER: sail
      POSTGRES_PASSWORD: sail123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sail"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: sail-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: sail-backend
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://sail:sail123@postgres:5432/sail
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev_jwt_secret_key_not_for_production
      - CORS_ORIGIN=http://localhost:3000
      - BASE_URL=http://localhost:3001
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./backend/src:/app/src
      - ./backend/storage:/app/storage
      - backend_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: sail-frontend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_BASE_URL=http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  backend_node_modules: